#!/bin/bash

no_rot=0
by=2
dinero () {
# dinro nom_experience  arguments_dinero
	echo "dinero"
	din_expe=$1
	din_t=$2
	shift 2 
	'./d4-7/dineroIV' -informat d  $*> log/tmp
	din_nf=`awk '/^[[:space:]]+Demand Fetches/ { print $3}' < log/tmp` 
	din_nmiss=`awk '/Demand miss rate/ { printf("%s ",$4)}' < log/tmp` 
	din_nread=`awk '/Total Bytes/{ printf("%s ", $5)}' < log/tmp` 
	echo "res : t=$din_t acces=$din_nf miss rate=$din_nmiss read data=$din_nread"
	echo "$din_t $din_nmiss $din_nread"  >> ${din_expe}
}

rot () {
# rot nom_experience t alpha arguments_dinero
	echo $*
	rot_expe=$1
	rot_t=$2
	rot_alpha=$3
	shift 3
	rot_din_arg=$*
	if [ $no_rot -eq 0 ];
		then
        echo "./rotation 512 512 $rot_t $rot_t ${rot_alpha}"
		./rotation 512 512 $rot_t $rot_t ${rot_alpha} > log/r${rot_t}_idx
		if [[ "${rot_expe}"  =~ "OBL" ]];
			then
			rot_lc=`echo $rot_din_arg | sed -r -e 's/-l1-dbsize ([0-9]+).*/\1/g'` 
            echo "xy_to_adr_OBL"
			xy_to_adr_OBL 512 512  $rot_lc $by < log/r${rot_t}_idx > log/r${rot_t}_adr_OBL
            echo "dinero"
			dinero ${rot_expe} ${rot_t} ${rot_din_arg}  < log/r${rot_t}_adr_OBL
		else
			xy_to_adr 512 512 < log/r${rot_t}_idx > log/r${rot_t}_adr
			dinero ${rot_expe} ${rot_t} ${rot_din_arg}  < log/r${rot_t}_adr
		fi
	fi
}

experience_run () {
# experience_run nom_experience increment_t t_maximum alpha arguments_dinero
	bcl_expe=res/$1
if [ $no_rot -eq 0 ];
then
	rm ${bcl_expe}
fi
	bcl_t_inc=$4
	bcl_t=$bcl_t_inc
	bcl_t_max=$3
	bcl_alpha=$2
	shift 4
    dinero_arg_defaut="-l1-dbsize 64  -l1-dsize 16k -l1-dassoc 2"
    if [ $# -ne 0 ] ;
        then
        bcl_dinero_arg=$*
    else
        bcl_dinero_arg=$dinero_arg_defaut
    fi
	rot ${bcl_expe} 1   ${bcl_alpha} $bcl_dinero_arg
	rot ${bcl_expe} 2  ${bcl_alpha} $bcl_dinero_arg
	rot ${bcl_expe} 4  ${bcl_alpha} $bcl_dinero_arg

	while [ $bcl_t -le $bcl_t_max ];
	  do
	  echo "boucle"
	  rot ${bcl_expe} $bcl_t $bcl_alpha  $bcl_dinero_arg
	  bcl_t=`expr $bcl_t + $bcl_t_inc`
	done 

	if [[ $bcl_dinero_arg =~ "l2" ]];
		then
		export LC_ALL=POSIX
		bcl_output="set terminal postscript; set output \"${bcl_expe}_L2.ps\""
gnuplot  << _fin 
		${bcl_output}
		set title "${bcl_dinero_arg}"
		set multiplot layout 2,1
		set yrange [0:1]
		set xlabel "Tile size"
		set ylabel "Miss rate"
		plot "${bcl_expe}" using (\$1):(\$2) title "Miss rate l1" w l,  "${bcl_expe}" using (\$1):(\$3) title "Miss rate l2" w l
		set yrange [0:*]
		set xlabel "Tile size"
		set ylabel "Bytes from memory"
		plot  "${bcl_expe}" using (\$1):(\$4) title "Bytes from memory l1" w l,  "${bcl_expe}" using (\$1):(\$5) title "Bytes from memory l2" w l
		unset multiplot
_fin
	else
		export LC_ALL=POSIX
		echo "gnuplot : ${bcl_expe}.ps"
		bcl_output="set terminal postscript fontscale 2; set output \"${bcl_expe}_miss.ps\""
gnuplot  << _fin 
		${bcl_output}
		set yrange [0:100]
		set xlabel "Tile size"
		set ylabel "Miss rate (%)"
		plot "${bcl_expe}" using (\$1):(\$2)*100 title "Miss rate" w l
_fin
		bcl_output="set terminal postscript; set output \"${bcl_expe}.ps\""
gnuplot  << _fin 
		${bcl_output}
		set title "${bcl_dinero_arg}"
		set multiplot layout 2,1
		set yrange [0:1]
		set xlabel "Tile size"
		set ylabel "Miss rate"
		plot "${bcl_expe}" using (\$1):(\$2) title "Miss rate" w l
		set yrange [0:*]
		set xlabel "Tile size"
		set ylabel "Bytes from memory"
		plot  "${bcl_expe}" using (\$1):(\$3) title "Bytes from memory" w l
		unset multiplot
_fin

	fi
	ps2pdf ${bcl_expe}.ps ${bcl_expe}.pdf
}